import ipaddress
import socket
from tqdm import tqdm
import sys
import requests
from requests.exceptions import RequestException

session = requests.Session()
session.verify = False  # For HTTPS requests, with the security caveat

def check_ipp_service(ip, port=631, timeout=2):
    try:
        # Check if the port is open
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(timeout)
        result = sock.connect_ex((ip, port))
        if result != 0:
            return (False, False), (False, False)

        http_success = False
        https_success = False
        http_auth_required = False
        https_auth_required = False

        # Check HTTP
        http_url = f"http://{ip}:{port}/ipp/print"
        try:
            response = requests.get(http_url, timeout=timeout)
            if response.status_code == 200:
                http_success = True
            elif response.status_code == 401 or response.status_code == 403:
                http_auth_required = True
        except RequestException:
            pass

        # Check HTTPS
        https_url = f"https://{ip}:{port}/ipp/print"
        try:
            response = session.get(https_url, timeout=timeout)
            if response.status_code == 200:
                https_success = True
            elif response.status_code == 401 or response.status_code == 403:
                https_auth_required = True
        except RequestException:
            pass

        # Return tuples for both HTTP and HTTPS
        return (http_success, http_auth_required), (https_success, https_auth_required)

    except socket.error:
        return (False, False), (False, False)

def scan_ips_for_printer(cidr):
    network = ipaddress.ip_network(cidr)
    found_http_printers = 0
    found_https_printers = 0
    auth_http_printers = 0
    auth_https_printers = 0
    
    with tqdm(total=len(list(network.hosts())), unit='ip', desc="Scanning") as pbar:
        for ip in network.hosts():
            (http_success, http_auth), (https_success, https_auth) = check_ipp_service(str(ip))
            if http_success:
                found_http_printers += 1
                print(f"Found HTTP IPP printer at {ip}")
            if http_auth:
                auth_http_printers += 1
                print(f"HTTP IPP printer at {ip} requires authentication")
            if https_success:
                found_https_printers += 1
                print(f"Found HTTPS IPP printer at {ip}")
            if https_auth:
                auth_https_printers += 1
                print(f"HTTPS IPP printer at {ip} requires authentication")
            pbar.update(1)
    
    print(f"\nTotal HTTP IPP printers found: {found_http_printers}")
    print(f"HTTP IPP printers requiring auth: {auth_http_printers}")
    print(f"Total HTTPS IPP printers found: {found_https_printers}")
    print(f"HTTPS IPP printers requiring auth: {auth_https_printers}")

def main():
    if len(sys.argv) != 2:
        print("Usage: python script.py <CIDR_range>")
        sys.exit(1)
    
    cidr_range = sys.argv[1]
    scan_ips_for_printer(cidr_range)

if __name__ == "__main__":
    main()
